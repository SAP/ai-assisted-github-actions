name: "AI-assisted Pull-Request Review"
description: "Create a pull request review with AI assistance"
author: "SAP SE"

inputs:
  aicore-service-key:
    description: "The service key for your SAP AI Core service instance."
    required: true

  user-token:
    description: "The personal access token of the GitHub user that is used to create the review."
    required: true
    default: ${{ github.token }}

  model:
    description: "The name of the SAP AI Core model that is used to generate the review."
    required: true
    default: "gpt-4o"
  model-parameters:
    description: 'Additional parameters for the model as JSON. For example, {"temperature": 0.5, "max_tokens": 100}.'
    default: "{}"
  model-version:
    description: "The version of the model that is used to generate the review."
    default: "latest"
  deployment-config:
    description: 'The deployment configuration as JSON. For example, {"resourceGroup": "abcdefg"}.'
    default: "{}"
  show-model-metadata-footer:
    description: "Whether to show the model metadata (such as model name and token usage) in the footer of the review."
    default: true

  prompt:
    description: "The base prompt that is used to generate the review."
    required: true
    default: |
      You are an AI assistant designed to create code reviews and will act as an expert software engineer.
      Here are the rules to follow on the code review comment:
      - Suggest points of improvement focused on performance, readability, best practices, clean code. 
      - Write a code snippet for each suggestion having your suggestion. Use fenced code blocks.
      - Identify and resolve significant concerns to improve overall code quality.
      - Do not reference line numbers directly. Instead, refer to the code context.
      - Also, check for typos, grammar, and spelling mistakes.
      - Provide a clear explanation for each suggestion.
      - Ensure that the feedback is actionable and specific to the code provided.
  prompt-addition:
    description: "The addition to the base prompt that is used to generate the review."
    required: false
  disclaimer-prompt:
    description: "The prompt that is used to generate the disclaimer. (The review was generated by an AI model. Please review the suggestions and make sure they are valid before applying them.)"
    required: false
    default: |
      Create a kind alternative for the following term: Here's a helpful review of your code with support from AI. Some insights are predictions, not guaranteed facts, so feel free to use what works best for you. Your decisions lead the wayâ€”AI is just here to assist.
      Do not use more than 80 words. Do not use quotation marks.

  display-mode:
    description: "Defines where the review will be posted (`review-comment`, `review-comment-delta`, or `none`)."
    required: true
    default: "review-comment"
  header-text:
    description: "Text to be inserted before the review."
    required: false
  footer-text:
    description: "Text to be inserted after the review."
    required: false
  previous-results:
    description: "Define what to do with previous results. Possible values are `keep` or `hide`."
    required: true
    default: "keep"

  include-files:
    description: "A list of patterns that match the files of the PR that should be included in the review (comma or newline separated and supports glob patterns)."
    required: false
    default: "**"
  exclude-files:
    description: "A list of patterns that match the files of the PR that should be excluded from the review (comma or newline separated and supports glob patterns)."
    required: false
    default: ""
  include-context-files:
    description: "A list of patterns for files that should always be included as context, regardless of whether the PR affects them (comma or newline separated and supports glob patterns)."
    required: false
    default: ""
  exclude-context-files:
    description: "A list of patterns for files that should be excluded from context, regardless of whether the PR affects them (comma or newline separated and supports glob patterns)."
    required: false
    default: ""

  pr-number:
    description: "The number of the pull request for which the review should be created."
    required: true
    default: "${{ github.event.number }}"
  base-sha:
    description: "The hash of the commit representing the code before changes. Used as the starting point in comparison."
  head-sha:
    description: "The hash of the commit representing the code after changes. Used as the end point in comparison."
  owner:
    description: "The owner of the repository for which the review should be created."
    required: true
    default: "${{ github.repository_owner }}"
  repo:
    description: "The name of the repository for which the review should be created."
    required: true
    default: "${{ github.event.repository.name }}"
  github-api-url:
    description: "The GitHub base URL will be automatically set to the correct value from the GitHub context variable. If you want to override this, you can do so here (not recommended)."
    required: true
    default: "${{ github.api_url }}"

outputs:
  reviewId:
    description: "The ID of the created GitHub PR review."

runs:
  using: node20
  main: dist/index.js
